{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","ContactForm","state","name","number","nameInputId","v4","phoneInputId","handleInputChange","e","setState","currentTarget","value","handleOnSubmit","preventDefault","props","onSubmit","reset","this","className","s","container","htmlFor","type","pattern","title","required","onChange","id","btn","Component","ContactList","contactsFiltered","onClick","filteredList","map","item","console","log","Filter","App","contacts","filter","addContact","text","some","includes","alert","contact","handleFilterChange","toLowerCase","delateItem","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46551a74.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ContactList_btn__3VuJf\"};","import React, { Component } from \"react\";\r\nimport { v4 as uuidv4, v4 } from \"uuid\";\r\nimport s from \"./ContactForm.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// import \"./ContactForm.scss\";\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  nameInputId = v4();\r\n  phoneInputId = v4();\r\n\r\n  reset() {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  }\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({\r\n      [e.currentTarget.name]: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state); //props\r\n    this.reset();\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleOnSubmit} className={s.container}>\r\n        <label htmlFor={this.nameInputId}>Name </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={this.state.name}\r\n          onChange={this.handleInputChange}\r\n          id={this.nameInputId}\r\n        />\r\n        <label htmlFor={this.phoneInputId}>Number </label>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={this.state.number}\r\n          onChange={this.handleInputChange}\r\n          id={this.phoneInputId}\r\n        />\r\n        <button className={s.btn} type=\"submit\">\r\n          Add conttact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default ContactForm;\r\n","import s from \"./ContactList.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactList = ({ contactsFiltered, onClick }) => {\r\n  const filteredList = contactsFiltered();\r\n  return (\r\n    <ul>\r\n      {filteredList.map((item) => {\r\n        const delItem = () => onClick(item.id);\r\n        console.log(item.id);\r\n        return (\r\n          <li key={item.id}>\r\n            {item.name} {item.number}\r\n            <button\r\n              className={s.btn}\r\n              type=\"button\"\r\n              name={item.id}\r\n              onClick={delItem}\r\n            >\r\n              Del\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contactsFiltered: PropTypes.func,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label>\r\n      Find contact by name\r\n      <input name=\"filter\" value={value} onChange={onChange} />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import { Component } from \"react\";\nimport { v4 as uuidv4, v4 } from \"uuid\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport s from \"./App.module.css\";\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContact = (text) => {\n    const { name, number } = text;\n\n    if (\n      this.state.contacts.some((item) => {\n        console.log(item.name.includes(name));\n        return item.name.includes(name);\n      })\n    ) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    const contact = {\n      id: v4(),\n      name: name,\n      number: number,\n    };\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  handleFilterChange = (e) => {\n    this.setState({\n      filter: e.currentTarget.value,\n    });\n  };\n\n  filter = () => {\n    const filteredContacts = this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(this.state.filter.toLowerCase())\n    );\n    return filteredContacts;\n  };\n\n  delateItem = (id) => {\n    return this.setState((prevState) => {\n      console.log(prevState);\n      return {\n        contacts: prevState.contacts.filter((item) => item.id !== id),\n      };\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter value={this.state.filter} onChange={this.handleFilterChange} />\n        <ContactList contactsFiltered={this.filter} onClick={this.delateItem} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactForm_container__3oQ-c\",\"btn\":\"ContactForm_btn__wrO4Z\"};"],"sourceRoot":""}